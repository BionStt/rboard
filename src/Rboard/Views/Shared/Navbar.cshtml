@model Report
@{
    IEnumerable<Report> reports = ViewData["Reports"] as IEnumerable<Report>;

    Dictionary<string, Report[]> reportCategories = reports
        .Select(r => r.Category)
        .Distinct()
        .ToDictionary(c => c, c => reports.Where(r => r.Category == c).ToArray());

    bool? debugMode = ViewData["DebugMode"] as bool?;
    bool? pauseMode = ViewData["PauseMode"] as bool?;

    bool debugBuild = false;
#if DEBUG
    debugBuild = true;
#endif
}

<ul class="nav navbar-nav navbar-left">
    @foreach (var category in reportCategories)
    {
        <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@category.Key <span class="caret"></span></a>
            <ul class="dropdown-menu">
                @foreach (Report categoryReport in category.Value)
                {
                    if (debugMode == true)
                    {
                        <li><a asp-controller="Reports" asp-action="Show" asp-route-category="@category.Key.ToLower()" asp-route-name="@categoryReport.GetUrl()" asp-route-debug="true">@categoryReport.Name</a></li>
                    }
                    else
                    {
                        <li><a asp-controller="Reports" asp-action="Show" asp-route-category="@category.Key.ToLower()" asp-route-name="@categoryReport.GetUrl()">@categoryReport.Name</a></li>
                    }
                }
            </ul>
        </li>
    }
</ul>
<ul class="nav navbar-nav navbar-right">

    @if (Model != null)
    {
        <li class="dropdown">

            @{
                DateTime? archiveDate = ViewData["ArchiveDate"] as DateTime?;
                DateTime[] archiveDates = (ViewData["ArchiveDates"] as IEnumerable<DateTime>)?.ToArray();
            }
        
            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@(archiveDate == null ? "Live" : $"Archive - {Utils.FormatDateTime(archiveDate.Value, "yyyy-MM-dd", "yyyy-MM-dd HH:mm")}") <span class="caret"></span></a>

            <ul class="dropdown-menu">

                <li><a asp-controller="Reports" asp-action="Show" asp-route-category="@Model.Category.ToLower()" asp-route-name="@Model.GetUrl()">Live</a></li>

                @if (archiveDates != null)
                {
                    foreach (DateTime date in archiveDates)
                    {
                        string urlArchiveDate = Utils.FormatDateTime(date, "yyyy-MM-dd", "yyyy-MM-dd_HH-mm");
                        string displayArchiveDate = Utils.FormatDateTime(date, "yyyy-MM-dd", "yyyy-MM-dd HH:mm");

                        <li><a asp-controller="Archives" asp-action="Show" asp-route-category="@Model.Category.ToLower()" asp-route-name="@Model.GetUrl()" asp-route-date="@urlArchiveDate">@displayArchiveDate</a></li>
                    }
                }
            </ul>
        </li>
    
        @if (archiveDate == null)
        {
            @if (debugMode != true)
            {
                <li><a data-toggle="tooltip" data-placement="bottom" title="Toggle slideshow mode" asp-controller="Reports" asp-action="TogglePause" asp-route-category="@Model.Category.ToLower()" asp-route-name="@Model.GetUrl()"><i class="fa @(pauseMode == true ? "fa-play" : "fa-pause")"></i></a></li>
            }

            @if (debugBuild)
            {
                <li><a data-toggle="tooltip" data-placement="bottom" title="Toggle debug mode" asp-controller="Reports" asp-action="ToggleDebug" asp-route-category="@Model.Category.ToLower()" asp-route-name="@Model.GetUrl()"><i style="font-size: 18px" class="fa fa-bug"></i></a></li>
            }

            <li><a data-toggle="tooltip" data-placement="bottom" title="Reload report" asp-controller="Reports" asp-action="ForceReload" asp-route-category="@Model.Category.ToLower()" asp-route-name="@Model.GetUrl()"><i style="font-size: 18px" class="fa fa-refresh"></i></a></li>
        }
    }
</ul>